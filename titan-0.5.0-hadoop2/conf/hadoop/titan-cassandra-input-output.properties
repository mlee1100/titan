# input graph parameters
titan.hadoop.input.format=com.thinkaurelius.titan.hadoop.formats.cassandra.TitanCassandraInputFormat
titan.hadoop.input.conf.storage.backend=cassandrathrift
titan.hadoop.input.conf.storage.hostname=localhost
titan.hadoop.input.conf.storage.port=9160
titan.hadoop.input.conf.storage.cassandra.keyspace=titan
cassandra.input.partitioner.class=org.apache.cassandra.dht.Murmur3Partitioner
# cassandra.input.split.size=512
# cassandra.thrift.framed.size_mb=49
# cassandra.thrift.message.max_size_mb=50


titan.hadoop.pipeline.track-state=true


# output data (graph or statistic) parameters
titan.hadoop.output.format=com.thinkaurelius.titan.hadoop.formats.cassandra.TitanCassandraOutputFormat
titan.hadoop.output.conf.storage.backend=cassandrathrift
titan.hadoop.output.conf.storage.hostname=localhost
titan.hadoop.output.conf.storage.port=9160
titan.hadoop.output.conf.storage.cassandra.keyspace=titan
titan.hadoop.output.conf.storage.batch-loading=true
titan.hadoop.output.infer-schema=true
# controls size of transaction
mapred.max.split.size=5242880
# mapred.reduce.tasks=10
mapred.job.reuse.jvm.num.tasks=-1

titan.hadoop.sideeffect.format=org.apache.hadoop.mapreduce.lib.output.TextOutputFormat

