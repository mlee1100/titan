
g = TitanFactory.open('conf/titan-berkeleydb-es.properties')
mgmt = g.getManagementSystem()
mgmt.buildIndex('ByEmail',Vertex.class).addKey(mgmt.makePropertyKey('email').dataType(String.class).make()).unique().buildCompositeIndex()
mgmt.buildIndex('ByPhone',Vertex.class).addKey(mgmt.makePropertyKey('phone').dataType(String.class).make()).unique().buildCompositeIndex()
mgmt.buildIndex('ByAge',Vertex.class).addKey(mgmt.makePropertyKey('age').dataType(String.class).make()).unique().buildCompositeIndex()
mgmt.buildIndex('ByEmployment_Status',Vertex.class).addKey(mgmt.makePropertyKey('employment_status').dataType(String.class).make()).unique().buildCompositeIndex()
mgmt.buildIndex('ByFull_Name',Vertex.class).addKey(mgmt.makePropertyKey('full_name').dataType(String.class).make()).unique().buildCompositeIndex()
mgmt.buildIndex('ByFull_Address',Vertex.class).addKey(mgmt.makePropertyKey('full_address').dataType(String.class).make()).unique().buildCompositeIndex()
// mgmt.makeEdgeLabel('aged').multiplicity(MULTI).make()
// mgmt.makeEdgeLabel('employed').multiplicity(MULTI).make()
// mgmt.makeEdgeLabel('lives').multiplicity(MULTI).make()
// mgmt.makeEdgeLabel('contacted').multiplicity(MULTI).make()
// mgmt.makeEdgeLabel('named').multiplicity(MULTI).make()
mgmt.commit()
g.commit()

// g = TitanFactory.open('conf/titan-berkeleydb-es.properties')
new File('data/coreg-sample-full.txt').eachLine { line ->
  def (city, first_name, last_name, date_of_birth, zip, phone, email_md5, gender, age, full_address, source, state_short, address, income_tax_tier, employment_status, email, full_name) = line.split( '\\|' ).collect( { it.trim() })
  // check if value is populated for current record
  // println 'email'
  if (email != '' && email != null) {
    type = 'email'
    //create vertex if it doesn't exist
    if (!g.V(type,email).hasNext()) {
      vEmail = g.addVertex(
        [type:type,
        email:email])
    }
  }
  // println 'age'
  // check if value is populated for current record
  if (age != '' && age != null) {
    type = 'age'
    //create vertex if it doesn't exist
    if (!g.V(type,age).hasNext()) {
      vAge = g.addVertex(
        [type:type,
        age:age,
        date_of_birth:date_of_birth])
    }
    // add edge from email to new vertex
    vEmail.addEdge('aged',vAge)
  }
  // println 'employment_status'
  // check if value is populated for current record
  if (employment_status != '' && employment_status != null) {
    type = 'employment_status'
    //create vertex if it doesn't exist
    if (!g.V(type,employment_status).hasNext()) {
      vEmployment = g.addVertex(
        [type:type,
        employment_status:employment_status,
        income_tax_tier:income_tax_tier])
    }
    vEmail.addEdge('employed',vEmployment)
  }
  // println 'name'
  // check if value is populated for current record
  if (full_name != '' && full_name != null) {
    type = 'name'
    //create vertex if it doesn't exist
    if (!g.V('full_name',full_name).hasNext()) {
      vName = g.addVertex(
        [type:type,
        full_name:full_name,
        first_name:first_name,
        last_name:last_name,
        gender:gender])
    }
    vEmail.addEdge('named',vName)
  }
  // println 'address'
  // check if value is populated for current record
  if (full_address != '' && full_address != null) {
    type = 'address'
    //create vertex if it doesn't exist
    if (!g.V('full_address',full_address).hasNext()) {
      vAddress = g.addVertex(
        [type:type,
        full_address:full_address,
        address:address,
        city:city,
        state:state_short,
        zip:zip])
    }
    vEmail.addEdge('lives',vAddress)
    if (full_name != '' && full_name != null) {
      // if record has a name, add edge to connect email to name
      vAddress.addEdge('named',vName)
    }
  }
  // println 'phone'
  // check if value is populated for current record
  if (phone != '' && phone != null) {
    type = 'phone'
    //create vertex if it doesn't exist
    if (!g.V(type,phone).hasNext()) {
      vPhone = g.addVertex(
        [type:type,
        phone:phone])
    }
    vEmail.addEdge('contacted',vPhone)
    if (full_address != '' && full_address != null) {
      // if record has an address, add edge to connect phone to address
      vPhone.addEdge('lives',vAddress)
    }
    if (full_name != '' && full_name != null) {
      // if record has a name, add edge to connect phone to name
      vPhone.addEdge('named',vName)
    }
  }
}
  
g.commit()

